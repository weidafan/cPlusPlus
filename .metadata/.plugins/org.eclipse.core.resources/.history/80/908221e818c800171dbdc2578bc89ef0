/*
 * Smalltalk.cpp
 *
 *  Created on: Nov 9, 2017
 *      Author: waida
 */
#include "includes/Smalltalk.h"
#include <string>
#include "includes/constants.h"
//derived class will set Nationality, iPerson. iPerson is just a counter used to distinguish objects of the same type
Smalltalk::Smalltalk(std::string myNationality, int iPerson) {
	this->iPerson = iPerson;
	current_phrase = 0;
	pWatch = 0;
}
//if pWatch !=0 then be sure to delete the pointer
Smalltalk::~Smalltalk(void) {
	if (pWatch)
		delete pWatch;
}
//cycles through and returns phrases created in populatePhrases
//takes the form Nationality iPerson: phrase
//for instance the following string comes from an American instance, the 10th iPerson and it is printing AMERICAN_PHRASE_2
//AMERICAN 10:Why yes, I would like to supersize that
std::string Smalltalk::saySomething() {
	return "";
}
//returns the time or I_DO_NOT_HAVE_A_WATCH string
std::string Smalltalk::getTime() {
	if (!pWatch) {
		return I_DO_NOT_HAVE_A_WATCH;
	} else {
		return pWatch->getTime();
	}
}
//if this object has a watch it is taken away,
//this means return the pointer and set this->pWatch =NULL;
Watch* Smalltalk::takeWatch() {
	if (pWatch)
		this->pWatch = 0;
	return pWatch;
}
//if already have a watch then return false and dont change pWatch pointer
//otherwise accept watch (return true) and set this->pWatch=pWatch
bool giveWatch(Watch *pWatch) {
	if (this.pWatch) {
		return false;
	} else {
		this.pWatch = pWatch;
		return true;
	}
}

